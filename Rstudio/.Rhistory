Q0b = A2[i + 2]
k0b = A2[(i + N + 2)]
Yajusup[i] = a2 + 2 * alfa2 * log(Eres[i]) * log((((Q0b - 0.429) / Eres[i]^alfa2) + (0.429 / ((2 * alfa2 + 1) * 0.55^alfa2)))) + log(exp(k0b))
Yajumed[i] = log((((Q0b - 0.429) / Eres[i]^alfa2) + (0.429 / ((2 * alfa2 + 1) * 0.55^alfa2))) / (((Q0au[idouro[i]] - 0.429) / Eresau[idouro[i]]^alfa2) + (0.429 / ((2 * alfa2 + 1) * 0.55^alfa2))))
Yajuinf[i] = log(exp(k0b))
}
Yaju2 = matrix(c(Yajusup, Yajumed, Yajuinf))
datb = Yexp - Yaju2
Yy = Yexp - Yaju2
ss = cbind(Yexp, Yaju2)
Yaju2
Yy
ss
a2 = A2[1]
alfa2 = A2[2]
for (i in 1 : N) {
Q0b = A2[i + 2]
k0b = A2[(i + N + 2)]
Yajusup[i] = a2 + 2 * alfa2 * log(Eres[i]) * log((((Q0b - 0.429) / Eres[i]^alfa2) + (0.429 / ((2 * alfa2 + 1) * 0.55^alfa2)))) + log(exp(k0b))
Yajumed[i] = log((((Q0b - 0.429) / Eres[i]^alfa2) + (0.429 / ((2 * alfa2 + 1) * 0.55^alfa2))) / (((Q0au[idouro[i]] - 0.429) / Eresau[idouro[i]]^alfa2) + (0.429 / ((2 * alfa2 + 1) * 0.55^alfa2))))
Yajuinf[i] = log(exp(k0b))
}
Yaju2 = matrix(c(Yajusup, Yajumed, Yajuinf))
datb = Yexp - Yaju2
Yy = Yexp - Yaju2
ss = cbind(Yexp, Yaju2)
datb = Yexp - Yaju2
Yexp
source('C:/Users/rafae/OneDrive/Workspace/Rstudio/AKQFIT.r', echo=TRUE)
View(A2)
Afinal = A2
for (i in 1 : N) {
Afinal[i+2] = exp(Afinal[i+2])
}
Afinal
Afinal = A2
for (i in 1 : N*2) {
Afinal[i+2] = exp(Afinal[i+2])
}
Afinal
for (i in 1 : N*2) {
Afinal[i+2] = exp(Afinal[i+2])
}
Afinal
Afinal = A2
Afinal
exp(Afinal)
source('C:/Users/rafae/OneDrive/Workspace/Rstudio/AKQFIT.r', echo=TRUE)
View(A2)
View(Afinal)
exp(Afinal)
Yy
ss
source('C:/Users/rafae/OneDrive/Workspace/Rstudio/AKQFIT.r', echo=TRUE)
View(A2)
exp(A2)
exp(Afinal)
source('C:/Users/rafae/OneDrive/Workspace/Rstudio/AKQFIT.r', echo=TRUE)
source('C:/Users/rafae/OneDrive/Workspace/Rstudio/AKQFIT.r', echo=TRUE)
source('C:/Users/rafae/OneDrive/Workspace/Rstudio/AKQFIT.r', echo=TRUE)
View(A2)
exp(A2)
source('C:/Users/rafae/OneDrive/Workspace/Rstudio/AKQFIT.r', echo=TRUE)
source('C:/Users/rafae/OneDrive/Workspace/Rstudio/AKQFIT.r', echo=TRUE)
source('C:/Users/rafae/OneDrive/Workspace/Rstudio/AKQFIT.r', echo=TRUE)
View(A2)
exp(A2)
source('C:/Users/rafae/OneDrive/Workspace/Rstudio/AKQFIT.r', echo=TRUE)
exp(A2)
source('C:/Users/rafae/OneDrive/Workspace/Rstudio/AKQFIT.r', echo=TRUE)
source('C:/Users/rafae/OneDrive/Workspace/Rstudio/AKQFIT.r', echo=TRUE)
source('C:/Users/rafae/OneDrive/Workspace/Rstudio/AKQFIT.r', echo=TRUE)
source('C:/Users/rafae/OneDrive/Workspace/Rstudio/AKQFIT.r', echo=TRUE)
source('C:/Users/rafae/OneDrive/Workspace/Rstudio/AKQFIT.r', echo=TRUE)
source('C:/Users/rafae/OneDrive/Workspace/Rstudio/AKQFIT.r', echo=TRUE)
source('C:/Users/rafae/OneDrive/Workspace/Rstudio/AKQFIT.r', echo=TRUE)
View(A2)
exp(A2)
source('C:/Users/rafae/OneDrive/Workspace/Rstudio/AKQFIT.r', echo=TRUE)
View(A2)
X
source('C:/Users/rafae/OneDrive/Workspace/Rstudio/AKQFIT.r', echo=TRUE)
View(A2)
Aa = runif(1, min = 22, max = 25)
Aalfa = runif(1, min = 0.00001, max = 0.1)
AQ0 = 0
for (i in 1 : N) {
AQ0[i] = runif(1, min = 0.1, max = 10)
}
Ak0 = 0
for (i in 1 : N) {
Ak0[i] = log(runif(1, min = 1, max = 5))
}
A2 = matrix(c(Aa, Aalfa, AQ0, Ak0))
colsexp = expression(Aa + 2 * Aalfa * log(Eres) * log((((AQ0 - 0.429) / Eres^Aalfa) + (0.429 / ((2 * Aalfa + 1) * 0.55^Aalfa)))) + log(exp(Ak0)))
#cols = D(expression(Aa + 2 * Aalfa * log(Eres) * log((((AQ0 - 0.429) / Eres^Aalfa) + (0.429 / ((2 * Aalfa + 1) * 0.55^Aalfa)))) + log(exp(Ak0))), 'Aa')
cols = rep(1, N)
colm = rep(0, N)
coli = rep(0, N)
col1 = c(cols, colm, coli)
#cols2 = eval(D(expression(exp(Aa) * Eres^(2* Aalfa) * Ak0 * (((AQ0 - 0.429) / Eres^Aalfa) + (0.429 / ((2 * Aalfa + 1) * 0.55^Aalfa)))), 'Aalfa'))
cols2 = eval(D(colsexp, 'Aalfa'))
colm2exp = expression(log((((AQ0 - 0.429) / Eres^Aalfa) + (0.429 / ((2 * Aalfa + 1) * 0.55^Aalfa))) / (((Q0au - 0.429) / Eresau^Aalfa) + (0.429 / ((2 * Aalfa + 1) * 0.55^Aalfa)))))
colm2 = eval(D(colm2exp, 'Aalfa'))
coli2 = coli = rep(0, N)
col2 = c(cols2, colm2, coli2)
cols3 = eval(D(colsexp, 'AQ0'))
colm3 = eval(D(colm2exp, 'AQ0'))
cols4 = eval(D(colsexp, 'Ak0'))
Ntotal = N * 3
XQ0 = matrix(c(0),nrow=Ntotal, ncol = N)
for(i in 1:N) {
XQ0[i,i] = cols3[i]
XQ0[(N + i),i] = colm3[i]
}
Xk0 = matrix(c(0),nrow=Ntotal, ncol = N)
for(i in 1:N) {
Xk0[i,i] = cols4[i]
Xk0[(N * 2 + i),i] = 1
}
X = cbind(col1, col2, XQ0, Xk0)
# numpar = ncol(X)
# vpar = inv(t(X) %*% inv(vY) %*% X)
# par = vpar %*% t(X) %*% inv (vY) %*% Y
# Yaju = X %*% par
# dif = Y - Yaju
# A = matrix(c(par[c(1,2)], exp(par[c( - 1, - 2)])))
#
# #qui quadrado
# qui2 = t(dif) %*% inv(vY) %*% dif
#
# #qui quadrado reduzido
# gl = Ntotal - numpar
# qui2red = qui2 / gl
# porbqui = (1-pchisq(qui2,gl))*100
#
# #criando os valores de cada parâmetro separadamente
# a = A[1]
# sa = sqrt(vpar[1,1])
# alfa = A[2]
# salfa = sqrt(vpar[2,2])
# k0aju = A[c( - 1, - 2)]
# sk0aju = k0aju * sqrt(diag(vpar)[c( - 1, - 2)])
#
# #Correlação entre a e alfa
# coralfa=vpar[1,2]/(sa*salfa)
#começando o levenberg
#Vetor A com as variaveis
Yexp = matrix(Y)
Yajusup = 0
Yajumed = 0
Yajuinf = 0
R = t(X) %*% inv(vY) %*% X
#valores de lambda e parametros para o loop na hora de fazer a analise
chidif = 1
lambda = 0.000000001
X2 = 0
chi2 = -1
recalcularY = 1
chi2novo = 0
while(1) {
if(recalcularY == 1) {
a2 = A2[1]
alfa2 = A2[2]
for (i in 1 : N) {
Q0b = A2[i + 2]
k0b = A2[(i + N + 2)]
Yajusup[i] = a2 + 2 * alfa2 * log(Eres[i]) * log((((Q0b - 0.429) / Eres[i]^alfa2) + (0.429 / ((2 * alfa2 + 1) * 0.55^alfa2)))) + log(exp(k0b))
Yajumed[i] = log((((Q0b - 0.429) / Eres[i]^alfa2) + (0.429 / ((2 * alfa2 + 1) * 0.55^alfa2))) / (((Q0au[idouro[i]] - 0.429) / Eresau[idouro[i]]^alfa2) + (0.429 / ((2 * alfa2 + 1) * 0.55^alfa2))))
Yajuinf[i] = log(exp(k0b))
}
Yaju2 = matrix(c(Yajusup, Yajumed, Yajuinf))
datb = Yexp - Yaju2
Yy = Yexp - Yaju2
ss = cbind(Yexp, Yaju2)
if (chi2 == -1) {
chi2 = t(datb) %*% Ginv(vY) %*% datb
}
}
Rlambda = matrix(0, nrow = N*2+2, ncol = N*2+2)
for (i in 1: (N*2+2)) {
for (j in 1: (N*2+2)) {
if (isTRUE(i == j)) {
Rlambda[i,j] = (1+lambda) * R[i,j]
} else {
Rlambda[i,j] = R[i,j]
}
}
}
DA = Ginv(Rlambda) %*% t(X) %*% Ginv(vY) %*% Yy
Ynovo = X %*% DA
DD = Yy - Ynovo
chi2novo = t(DD) %*% Ginv(vY) %*% DD
chidif = chi2novo - chi2
if (chidif >= 0) {
lambda = lambda * 10
recalcularY = 0
} else {
lambda = lambda / 10
Anovo = A2 + DA
A2 = Anovo
chi2 = chi2novo
recalcularY = 1
}
if (isTRUE(abs(chidif) < 1.0) & (isTRUE(abs(chidif) > 0.01))) {
break
}
}
Afinal = A2
View(A2)
source('C:/Users/rafae/OneDrive/Workspace/Rstudio/AKQFIT.r', echo=TRUE)
DD
Yy
Ynovo
Texp
Yexp
Yaju2
ss
source('C:/Users/rafae/OneDrive/Workspace/Rstudio/AKQFIT.r', echo=TRUE)
View(A2)
Yaju2
source('C:/Users/rafae/OneDrive/Workspace/Rstudio/AKQFIT.r', echo=TRUE)
View(A2)
exp(A2)
#construindo a matrix de planejamento
#Definindo as variaveis
Aa = runif(1, min = 22, max = 25)
Aalfa = runif(1, min = 0.001, max = 0.008)
AQ0 = 0
for (i in 1 : N) {
AQ0[i] = runif(1, min = 0.1, max = 10)
}
Ak0 = 0
for (i in 1 : N) {
Ak0[i] = log(runif(1, min = 1, max = 5))
}
A2 = matrix(c(Aa, Aalfa, AQ0, Ak0))
colsexp = expression(Aa + 2 * Aalfa * log(Eres) * log((((AQ0 - 0.429) / Eres^Aalfa) + (0.429 / ((2 * Aalfa + 1) * 0.55^Aalfa)))) + log(exp(Ak0)))
#cols = D(expression(Aa + 2 * Aalfa * log(Eres) * log((((AQ0 - 0.429) / Eres^Aalfa) + (0.429 / ((2 * Aalfa + 1) * 0.55^Aalfa)))) + log(exp(Ak0))), 'Aa')
cols = rep(1, N)
colm = rep(0, N)
coli = rep(0, N)
col1 = c(cols, colm, coli)
#cols2 = eval(D(expression(exp(Aa) * Eres^(2* Aalfa) * Ak0 * (((AQ0 - 0.429) / Eres^Aalfa) + (0.429 / ((2 * Aalfa + 1) * 0.55^Aalfa)))), 'Aalfa'))
cols2 = eval(D(colsexp, 'Aalfa'))
colm2exp = expression(log((((AQ0 - 0.429) / Eres^Aalfa) + (0.429 / ((2 * Aalfa + 1) * 0.55^Aalfa))) / (((Q0au - 0.429) / Eresau^Aalfa) + (0.429 / ((2 * Aalfa + 1) * 0.55^Aalfa)))))
colm2 = eval(D(colm2exp, 'Aalfa'))
coli2 = coli = rep(0, N)
col2 = c(cols2, colm2, coli2)
cols3 = eval(D(colsexp, 'AQ0'))
colm3 = eval(D(colm2exp, 'AQ0'))
cols4 = eval(D(colsexp, 'Ak0'))
Ntotal = N * 3
XQ0 = matrix(c(0),nrow=Ntotal, ncol = N)
for(i in 1:N) {
XQ0[i,i] = cols3[i]
XQ0[(N + i),i] = colm3[i]
}
Xk0 = matrix(c(0),nrow=Ntotal, ncol = N)
for(i in 1:N) {
Xk0[i,i] = cols4[i]
Xk0[(N * 2 + i),i] = 1
}
X = cbind(col1, col2, XQ0, Xk0)
#começando o levenberg
#Vetor A com as variaveis
a2 = A2[1]
alfa2 = A2[2]
for (i in 1 : N) {
Q0b = A2[i + 2]
k0b = A2[(i + N + 2)]
Yajusup[i] = a2 + 2 * alfa2 * log(Eres[i]) * log((((Q0b - 0.429) / Eres[i]^alfa2) + (0.429 / ((2 * alfa2 + 1) * 0.55^alfa2)))) + log(exp(k0b))
Yajumed[i] = log((((Q0b - 0.429) / Eres[i]^alfa2) + (0.429 / ((2 * alfa2 + 1) * 0.55^alfa2))) / (((Q0au[idouro[i]] - 0.429) / Eresau[idouro[i]]^alfa2) + (0.429 / ((2 * alfa2 + 1) * 0.55^alfa2))))
Yajuinf[i] = log(exp(k0b))
}
Yaju2 = matrix(c(Yajusup, Yajumed, Yajuinf))
datb = Yexp - Yaju2
Yy = Yexp - Yaju2
ss = cbind(Yexp, Yaju2)
ss
Yy
chi2 = t(datb) %*% Ginv(vY) %*% datb
Rlambda = matrix(0, nrow = N*2+2, ncol = N*2+2)
for (i in 1: (N*2+2)) {
for (j in 1: (N*2+2)) {
if (isTRUE(i == j)) {
Rlambda[i,j] = (1+lambda) * R[i,j]
} else {
Rlambda[i,j] = R[i,j]
}
}
}
chi2
DA = Ginv(Rlambda) %*% t(X) %*% Ginv(vY) %*% Yy
Da
DA
DA2 = inv(Rlambda) %*% t(X) %*% Ginv(vY) %*% Yy
DA2
DA = Ginv(Rlambda) %*% t(X) %*% Ginv(vY) %*% Yy
Ynovo = X %*% DA
Ynovo
Yexp
DA
DD = Yy - Ynovo
DD
chi2novo = t(DD) %*% Ginv(vY) %*% DD
chi2novo
chidif
chidif = chi2novo - chi2
chidif
chi2
chi2novo
chisq.test(Yy, Ynovo)
chisq.test(Ynovo)
chisq.test(Yy)
chisq.test(Yy, Ynovo)
source('C:/Users/rafae/OneDrive/Workspace/Rstudio/AKFIT - R Edition.r', echo=TRUE)
chisq.test(Yy, Ynovo)
DD
chi2novo
chi2
source('C:/Users/rafae/OneDrive/Workspace/Rstudio/AKQFIT.r', echo=TRUE)
View(A2)
View(A)
a2
alfa2
k0b
Q0b
source('C:/Users/rafae/OneDrive/Workspace/Rstudio/AKQFIT.r', echo=TRUE)
View(A2)
source('C:/Users/rafae/OneDrive/Workspace/Rstudio/AKQFIT.r', echo=TRUE)
View(A2)
exp(A2)
source('C:/Users/rafae/OneDrive/Workspace/Rstudio/AKQFIT.r', echo=TRUE)
View(A2)
exp(A2)
source('C:/Users/rafae/OneDrive/Workspace/Rstudio/AKQFIT.r', echo=TRUE)
View(A2)
source('C:/Users/rafae/OneDrive/Workspace/Rstudio/AKQFIT.r', echo=TRUE)
View(Afinal)
View(A2)
exp(A2)
source('C:/Users/rafae/OneDrive/Workspace/Rstudio/AKQFIT.r', echo=TRUE)
source('C:/Users/rafae/OneDrive/Workspace/Rstudio/AKQFIT.r', echo=TRUE)
View(A2)
exp(A2)
source('C:/Users/rafae/OneDrive/Workspace/Rstudio/AKQFIT.r', echo=TRUE)
source('C:/Users/rafae/OneDrive/Workspace/Rstudio/AKQFIT.r', echo=TRUE)
source('C:/Users/rafae/OneDrive/Workspace/Rstudio/AKQFIT.r', echo=TRUE)
source('C:/Users/rafae/OneDrive/Workspace/Rstudio/AKQFIT.r', echo=TRUE)
View(A2)
colm2exp
colm2
cols2
colsexp
D(colsexp, 'Aalfa')
cols2b = 2 * log(Eres) * log((((exp(AQ0) - 0.429)/Eres^Aalfa) + (0.429/((2 * Aalfa + 1) * 0.55^Aalfa)))) - 2 * Aalfa * log(Eres) * ((0.429 * (2 * 0.55^Aalfa + (2 * Aalfa + 1) * (0.55^Aalfa * log(0.55)))/((2 * Aalfa + 1) * 0.55^Aalfa)^2 + (exp(AQ0) - 0.429) * (Eres^Aalfa * log(Eres))/(Eres^Aalfa)^2)/(((exp(AQ0) - 0.429)/Eres^Aalfa) + (0.429/((2 * Aalfa + 1) * 0.55^Aalfa))))
D(colm2exp, 'Aalfa')
colm2b = -(((0.429 * (2 * 0.55^Aalfa + (2 * Aalfa + 1) * (0.55^Aalfa * log(0.55)))/((2 * Aalfa + 1) * 0.55^Aalfa)^2 + (exp(AQ0) - 0.429) * (Eres^Aalfa * log(Eres))/(Eres^Aalfa)^2)/(((Q0au - 0.429)/Eresau^Aalfa) + (0.429/((2 * Aalfa + 1) * 0.55^Aalfa))) - (((exp(AQ0) - 0.429)/Eres^Aalfa) + (0.429/((2 * Aalfa + 1) * 0.55^Aalfa))) * (0.429 * (2 * 0.55^Aalfa + (2 * Aalfa + 1) * (0.55^Aalfa * log(0.55)))/((2 * Aalfa + 1) * 0.55^Aalfa)^2 + (Q0au - 0.429) * (Eresau^Aalfa * log(Eresau))/(Eresau^Aalfa)^2)/(((Q0au - 0.429)/Eresau^Aalfa) + (0.429/((2 * Aalfa + 1) * 0.55^Aalfa)))^2)/((((exp(AQ0) - 0.429)/Eres^Aalfa) + (0.429/((2 * Aalfa + 1) * 0.55^Aalfa)))/(((Q0au - 0.429)/Eresau^Aalfa) + (0.429/((2 * Aalfa + 1) * 0.55^Aalfa)))))
cols3
D(colsexp, 'AQ0')
D(colm2exp, 'AQ0')
cols4
#construindo a matrix de planejamento
#Definindo as variaveis
Aa = runif(1, min = 22, max = 25)
Aalfa = runif(1, min = 0.001, max = 0.008)
AQ0 = 0
for (i in 1 : N) {
AQ0[i] = log(runif(1, min = 1, max = 10))
}
Ak0 = 0
for (i in 1 : N) {
Ak0[i] = log(runif(1, min = 1, max = 5))
}
A2 = matrix(c(Aa, Aalfa, AQ0, Ak0))
colsexp = expression(Aa + 2 * Aalfa * log(Eres) * log((((AQ0 - 0.429) / Eres^Aalfa) + (0.429 / ((2 * Aalfa + 1) * 0.55^Aalfa)))) + log(exp(Ak0)))
#cols = D(expression(Aa + 2 * Aalfa * log(Eres) * log((((AQ0 - 0.429) / Eres^Aalfa) + (0.429 / ((2 * Aalfa + 1) * 0.55^Aalfa)))) + log(exp(Ak0))), 'Aa')
cols = rep(1, N)
colm = rep(0, N)
coli = rep(0, N)
col1 = c(cols, colm, coli)
#cols2 = eval(D(expression(exp(Aa) * Eres^(2* Aalfa) * Ak0 * (((AQ0 - 0.429) / Eres^Aalfa) + (0.429 / ((2 * Aalfa + 1) * 0.55^Aalfa)))), 'Aalfa'))
cols2 = eval(D(colsexp, 'Aalfa'))
cols2b = 2 * log(Eres) * log((((exp(AQ0) - 0.429)/Eres^Aalfa) + (0.429/((2 * Aalfa + 1) * 0.55^Aalfa)))) - 2 * Aalfa * log(Eres) * ((0.429 * (2 * 0.55^Aalfa + (2 * Aalfa + 1) * (0.55^Aalfa * log(0.55)))/((2 * Aalfa + 1) * 0.55^Aalfa)^2 + (exp(AQ0) - 0.429) * (Eres^Aalfa * log(Eres))/(Eres^Aalfa)^2)/(((exp(AQ0) - 0.429)/Eres^Aalfa) + (0.429/((2 * Aalfa + 1) * 0.55^Aalfa))))
colm2exp = expression(log((((AQ0 - 0.429) / Eres^Aalfa) + (0.429 / ((2 * Aalfa + 1) * 0.55^Aalfa))) / (((Q0au - 0.429) / Eresau^Aalfa) + (0.429 / ((2 * Aalfa + 1) * 0.55^Aalfa)))))
colm2 = eval(D(colm2exp, 'Aalfa'))
colm2b = -(((0.429 * (2 * 0.55^Aalfa + (2 * Aalfa + 1) * (0.55^Aalfa * log(0.55)))/((2 * Aalfa + 1) * 0.55^Aalfa)^2 + (exp(AQ0) - 0.429) * (Eres^Aalfa * log(Eres))/(Eres^Aalfa)^2)/(((Q0au - 0.429)/Eresau^Aalfa) + (0.429/((2 * Aalfa + 1) * 0.55^Aalfa))) - (((exp(AQ0) - 0.429)/Eres^Aalfa) + (0.429/((2 * Aalfa + 1) * 0.55^Aalfa))) * (0.429 * (2 * 0.55^Aalfa + (2 * Aalfa + 1) * (0.55^Aalfa * log(0.55)))/((2 * Aalfa + 1) * 0.55^Aalfa)^2 + (Q0au - 0.429) * (Eresau^Aalfa * log(Eresau))/(Eresau^Aalfa)^2)/(((Q0au - 0.429)/Eresau^Aalfa) + (0.429/((2 * Aalfa + 1) * 0.55^Aalfa)))^2)/((((exp(AQ0) - 0.429)/Eres^Aalfa) + (0.429/((2 * Aalfa + 1) * 0.55^Aalfa)))/(((Q0au - 0.429)/Eresau^Aalfa) + (0.429/((2 * Aalfa + 1) * 0.55^Aalfa)))))
coli2 = coli = rep(0, N)
col2 = c(cols2b, colm2b, coli2)
cols3 = eval(D(colsexp, 'AQ0'))
cols3b = 2 * Aalfa * log(Eres) * (1/Eres^Aalfa/(((exp(AQ0) - 0.429)/Eres^Aalfa) + (0.429/((2 * Aalfa + 1) * 0.55^Aalfa))))
colm3 = eval(D(colm2exp, 'AQ0'))
colm3b = 1/Eres^Aalfa/(((Q0au - 0.429)/Eresau^Aalfa) + (0.429/((2 * Aalfa + 1) * 0.55^Aalfa)))/((((exp(AQ0) - 0.429)/Eres^Aalfa) + (0.429/((2 * Aalfa + 1) * 0.55^Aalfa)))/(((Q0au - 0.429)/Eresau^Aalfa) + (0.429/((2 * Aalfa + 1) * 0.55^Aalfa))))
cols4 = eval(D(colsexp, 'Ak0'))
Ntotal = N * 3
XQ0 = matrix(c(0),nrow=Ntotal, ncol = N)
for(i in 1:N) {
XQ0[i,i] = cols3b[i]
XQ0[(N + i),i] = colm3b[i]
}
Xk0 = matrix(c(0),nrow=Ntotal, ncol = N)
for(i in 1:N) {
Xk0[i,i] = cols4[i]
Xk0[(N * 2 + i),i] = 1
}
X = cbind(col1, col2, XQ0, Xk0)
#começando o levenberg
#começando o levenberg
#Vetor A com as variaveis
Yexp = matrix(Y)
Yajusup = 0
Yajumed = 0
Yajuinf = 0
R = t(X) %*% inv(vY) %*% X
#valores de lambda e parametros para o loop na hora de fazer a analise
chidif = 1
lambda = 0.000000001
X2 = 0
chi2 = -1
recalcularY = 1
chi2novo = 0
while(1) {
if(recalcularY == 1) {
a2 = A2[1]
alfa2 = A2[2]
for (i in 1 : N) {
Q0b = A2[i + 2]
k0b = A2[(i + N + 2)]
Yajusup[i] = a2 + 2 * alfa2 * log(Eres[i]) * log((((exp(Q0b) - 0.429) / Eres[i]^alfa2) + (0.429 / ((2 * alfa2 + 1) * 0.55^alfa2)))) + log(exp(k0b))
Yajumed[i] = log((((exp(Q0b) - 0.429) / Eres[i]^alfa2) + (0.429 / ((2 * alfa2 + 1) * 0.55^alfa2))) / (((Q0au[idouro[i]] - 0.429) / Eresau[idouro[i]]^alfa2) + (0.429 / ((2 * alfa2 + 1) * 0.55^alfa2))))
Yajuinf[i] = log(exp(k0b))
}
Yaju2 = matrix(c(Yajusup, Yajumed, Yajuinf))
datb = Yexp - Yaju2
Yy = Yexp - Yaju2
ss = cbind(Yexp, Yaju2)
if (chi2 == -1) {
chi2 = t(datb) %*% inv(vY) %*% datb
}
}
Rlambda = matrix(0, nrow = N*2+2, ncol = N*2+2)
for (i in 1: (N*2+2)) {
for (j in 1: (N*2+2)) {
if (isTRUE(i == j)) {
Rlambda[i,j] = (1+lambda) * R[i,j]
} else {
Rlambda[i,j] = R[i,j]
}
}
}
DA = inv(Rlambda) %*% t(X) %*% inv(vY) %*% Yy
Ynovo = X %*% DA
DD = Yy - Ynovo
chi2novo = t(DD) %*% inv(vY) %*% DD
chidif = chi2novo - chi2
if (chidif >= 0) {
lambda = lambda * 10
recalcularY = 0
} else {
lambda = lambda / 10
Anovo = A2 + DA
A2 = Anovo
chi2 = chi2novo
recalcularY = 1
}
if (isTRUE(abs(chidif) < 1.0) & (isTRUE(abs(chidif) > 0.0001))) {
break
}
}
Afinal = A2
for (i in 1 : N*2) {
Afinal[i+2] = exp(Afinal[i+2])
}
sAfinal = sqrt(diag(inv(Rlambda)))
sAfinal2 = Afinal * sqrt(diag(inv(Rlambda)))
sAfinal2 = matrix(sAfinal2[c(-1,-2)])
quirednovo = chi2novo/gl
probchi2 = (1-pchisq(chi2novo,gl))*100
print("saiiiiiiiiiiiii")
View(Afinal)
colsexp = expression(Aa + 2 * Aalfa * log(Eres) * log((((AQ0 - 0.429) / Eres^Aalfa) + (0.429 / ((2 * Aalfa + 1) * 0.55^Aalfa)))) + log(Ak0))
D(colsexp, 'Aalfa')
D(colsexp, 'AQ0')
source('C:/Users/rafae/OneDrive/Workspace/Rstudio/AKQFIT.r', echo=TRUE)
View(A2)
D(expression(log(((FCdau * (Aspau / AspCdau) - 1) * (Gth * Gepiau)) / ((FCd * (Asp / AspCd) - 1) * (Gthau * Gepi)))), 'Aspau')
D(expression(((FCdau * (Aspau / AspCdau) - 1) * (Gth * Gepiau)) / ((FCd * (Asp / AspCd) - 1) * (Gthau * Gepi))), 'Aspau')
D(expression(((FCdau * (Aspau / AspCdau) - 1) * (Gth * Gepiau)) / ((FCd * (Asp / AspCd) - 1) * (Gthau * Gepi))), 'AspCdau')
D(expression(((FCdau * (Aspau / AspCdau) - 1) * (Gth * Gepiau)) / ((FCd * (Asp / AspCd) - 1) * (Gthau * Gepi))), 'FCdau')
D(expression(((FCdau * (Aspau / AspCdau) - 1) * (Gth * Gepiau)) / ((FCd * (Asp / AspCd) - 1) * (Gthau * Gepi))), 'Gthau')
D(expression(((FCdau * (Aspau / AspCdau) - 1) * (Gth * Gepiau)) / ((FCd * (Asp / AspCd) - 1) * (Gthau * Gepi))), 'Gepiau')
source('C:/Users/rafae/OneDrive/Workspace/Rstudio/AKQFIT.r', echo=TRUE)
View(A2)
log(A2)
exp(A2)
exp(A2)
source('C:/Users/rafae/OneDrive/Workspace/Rstudio/AKQFIT.r', echo=TRUE)
source('C:/Users/rafae/OneDrive/Workspace/Rstudio/AKQFIT.r', echo=TRUE)
A2
exp(A2)
View(A2)
View(Afinal)
source('C:/Users/rafae/OneDrive/Workspace/Rstudio/AKQFIT.r', echo=TRUE)
N
#Calcula o Y Medio da Matrix Y
Ym = expression(((FCdau * (Aspau / AspCdau) - 1) * (Gth * Gepiau)) / ((FCd * (Asp / AspCd) - 1) * (Gthau * Gepi)))
Ymedio = 0
for (i in 1:N) {
Ymedio[i] = ((FCdau[idouro[i]] * (Aspau[idouro[i]] / AspCdau[idouro[i]]) - 1) * (Gth[i] * Gepiau[idouro[i]])) / ((FCd[i] * (Asp[i] / AspCd[i]) - 1) * (Gthau[idouro[i]] * Gepi[i]))
}
View(data)
