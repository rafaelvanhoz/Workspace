Ntotal = N * 2
X2 = matrix(c(0),nrow=Ntotal, ncol = N)
for(i in 1:N) {
X2[i,i] = (alfa2/Q0[i]) * log(Eres[i]) - alfa2/(((FCdau[idouro[i]]*(Aspau[idouro[i]]/AspCdau[idouro[i]])-1)/(FCd[i]*(Asp[i]/AspCd[i])-1))*((Gth[i]*Gepiau[idouro[i]])/((Gthau[idouro[i]]*Gepi[i])))*((Q0au[idouro[i]] - 0.429)/(Eresau[idouro[i]]^-alfa2)+0.429/((2*alfa2+1)*(0.55^alfa2))))^2 * (((((FCdau[idouro[i]]*(Aspau[idouro[i]]/AspCdau[idouro[i]])-1)/(FCd[i]*(Asp[i]/AspCd[i])-1))*((Gth[i]*Gepiau[idouro[i]])/((Gthau[idouro[i]]*Gepi[i])))*((Q0au[idouro[i]] - 0.429)/(Eresau[idouro[i]]^-alfa2)+0.429/((2*alfa2+1)*(0.55^alfa2)))) + 0.429) * log(Eres[i]) - 0.602)
X2[(N + i),i] = 1/Eres[i]^-alfa2
}
X2 = cbind(col1, col2, X2)
#comecando o levenberg
Yajusup2 = 0
Yajuinf2 = 0
Yexp = matrix(Y2)
R = t(X2) %*% inv(vY2) %*% X2
#valores de lambda e parametros para o loop na hora de fazer a analise
chidif = 1
lambda = 0.000000001
chi2 = -1
recalcularY = 1
chi2novo = 0
A3 = A2
k0b = A3[c(-1,-2)]
Q0b = 0
for (i in 1 : N) {
Q0b[i] = log(runif(1, min = 1.001, max = 5))
}
A3 = c(A3[c(1, 2)], Q0b)
Q0alfac =  ((Q0au - 0.429)/(Eres*alfa2)+0.429/((2*alfa2+1)*(0.55**alfa2)))
# for (i in 1 : N) {
#   Q0c = Q0b[i]
#   Yajusup2[i] = a2 + ((alfa2 / Q0c) * ((Q0c + 0.429) * log(Eres[i]) - 0.602)) + log(exp(k0b[i]))
#   Yajuinf2[i] = log(exp(Q0c))
# }
# Yaju3 = matrix(c(Yajusup2,Yajuinf2))
# datb = Yexp - Yaju3
# Yy = Yexp - Yaju3
# ss2 = cbind(Yexp, Yaju3)
# if (chi2 == -1) {
#   chi2 = t(datb) %*% inv(vY2) %*% datb
# }
while(1) {
if(recalcularY == 1) {
for (i in 1 : N) {
Q0c = Q0b[i]
Yajusup2[i] = a2 + ((alfa2 / exp(Q0c)) * ((exp(Q0c) + 0.429) * log(Eres[i]) - 0.602)) + log(exp(k0b[i]))
Yajuinf2[i] = log((exp(Q0c) - 0.429/((2*alfa2+1)*(0.55^alfa2)))/Eres[i]^-alfa2 + 0.429)
}
Yaju3 = matrix(c(Yajusup2,Yajuinf2))
datb = Yexp - Yaju3
Yy = Yexp - Yaju3
ss2 = cbind(Yexp, Yaju3)
if (chi2 == -1) {
chi2 = t(datb) %*% inv(vY2) %*% datb
}
}
Rlambda2 = matrix(0, nrow = N+2, ncol = N+2)
for (i in 1: (N+2)) {
for (j in 1: (N+2)) {
if (isTRUE(i == j)) {
Rlambda2[i,j] = (1+lambda) * R[i,j]
} else {
Rlambda2[i,j] = R[i,j]
}
}
}
DA = Ginv(Rlambda2) %*% t(X2) %*% inv(vY2) %*% Yy
Ynovo = X2 %*% DA
DD = Yy - Ynovo
chi2novo = t(DD) %*% inv(vY2) %*% DD
chidif = chi2novo - chi2
if (chidif >= 0) {
lambda = lambda * 10
recalcularY = 1
} else {
lambda = lambda / 10
Anovo = A3 + DA
A3 = Anovo
chi2 = chi2novo
recalcularY = 1
}
if (isTRUE(abs(chidif) < 0.00001) & (isTRUE(abs(chidif) > 0.000000001))) {
break
}
}
exp(A3)
Afinal = A2
for (i in 1 : N) {
Afinal[i+2] = exp(Afinal[i+2])
}
exp(A3)
sY = sqrt(diag(vY))
sAfinal = sqrt(diag(inv(Rlambda)))
sAfinal2 = Afinal * sqrt(diag(inv(Rlambda)))
sAfinal2 = matrix(sAfinal2[c(-1,-2)])
quirednovo = chi2novo/gl
probchi2 = (1-pchisq(chi2novo,gl))*100
Afinal = c(Afinal, exp(A3[c(-1,-2)]))
Afinal
source('C:/Users/rafae/OneDrive/Workspace/Rstudio/AKFIT - R Edition - Backup.r', echo=TRUE)
Afinal
View(Afinal)
source('C:/Users/rafae/OneDrive/Workspace/Rstudio/AKQFIT.r', echo=TRUE)
source('C:/Users/rafae/OneDrive/Workspace/Rstudio/AQFIT - R Edition.R', echo=TRUE)
source('C:/Users/rafae/OneDrive/Workspace/Rstudio/AQFIT - R Edition.R', echo=TRUE)
source('C:/Users/rafae/OneDrive/Workspace/Rstudio/AKFIT - R Edition - Backup.r', echo=TRUE)
View(Q0)
View(k0)
View(Afinal)
source('C:/Users/rafae/OneDrive/Workspace/Rstudio/AKFIT - R Edition.r', echo=TRUE)
View(Afinal)
source('C:/Users/rafae/OneDrive/Workspace/Rstudio/AKFIT - R Edition - Backup.r', echo=TRUE)
View(Afinal)
source('C:/Users/rafae/OneDrive/Workspace/Rstudio/AKFIT - R Edition.r', echo=TRUE)
Afinal
source('C:/Users/rafae/OneDrive/Workspace/Rstudio/AKFIT - R Edition.r', echo=TRUE)
source('C:/Users/rafae/OneDrive/Workspace/Rstudio/AKFIT - R Edition.r', echo=TRUE)
View(Afinal)
source('C:/Users/rafae/OneDrive/Workspace/Rstudio/AKFIT - R Edition.r', echo=TRUE)
source('C:/Users/rafae/OneDrive/Workspace/Rstudio/AKFIT - R Edition.r', echo=TRUE)
Afinal
View(Afinal)
View(A3)
exp(A3)
Q0
source('C:/Users/rafae/OneDrive/Workspace/Rstudio/AKFIT - R Edition.r', echo=TRUE)
View(A2)
exp(A2)
source('C:/Users/rafae/OneDrive/Workspace/Rstudio/AKFIT - R Edition.r', echo=TRUE)
source('C:/Users/rafae/OneDrive/Workspace/Rstudio/AKFIT - R Edition.r', echo=TRUE)
View(Afinal)
View(A3)
exp(A3)
source('C:/Users/rafae/OneDrive/Workspace/Rstudio/AKFIT - R Edition.r', echo=TRUE)
View(A3)
View(Afinal)
param = c(a, alfa, Isotopo, Isotopo)
param
param = matrix(c(a, alfa, Isotopo, Isotopo))
param
param = matrix(c('a', 'alfa', Isotopo, Isotopo))
param
cbind(param, Afinal)
Afinal = matrix(c(Afinal, exp(A3[c(-1,-2)])))
cbind(param, Afinal)
param = matrix(c('a', 'alfa', Isotopo, Isotopo))
cbind(param, Afinal)
Afinal
param
Afinal = c(Afinal, exp(A3[c(-1,-2)]))
Afinal
Afinal
source('C:/Users/rafae/OneDrive/Workspace/Rstudio/AKFIT - R Edition.r', echo=TRUE)
cbind(param, Afinal)
paramfinal = cbind(param, Afinal)
paramfinal
View(paramtotal)
View(paramfinal)
for (i in 1 : N) {
parQ0[i] = 'Q0'
}
parQ0 = 0
for (i in 1 : N) {
parQ0[i] = 'Q0'
}
parQ0
park0 = 0
for (i in 1 : N) {
park0[i] = 'k0'
}
paramfinal = cbind(param, c(parQ0, park0), Afinal)
parQ0 = 0
for (i in 1 : N) {
parQ0[i] = 'Q0'
}
park0 = 0
for (i in 1 : N) {
park0[i] = 'k0'
}
paramfinal = cbind(param, c(parQ0, park0), Afinal)
param = matrix(c(Isotopo, Isotopo))
Afinal
park0
c(parQ0, park0)
Afinal = matrix(c(Afinal[c(-1,-2)], exp(A3[c(-1,-2)])))
aalfa = matrix[c(1, 2)]
Afinal = matrix(c(Afinal[c(-1,-2)], exp(A3[c(-1,-2)])))
aalfa = matrix(Afinal[c(1, 2)])
paramfinal = cbind(param, c(park0, parQ0), Afinal)
Afinal = matrix(c(Afinal[c(-1,-2)], exp(A3[c(-1,-2)])))
aalfa = matrix(Afinal[c(1, 2)])
param = matrix(c(Isotopo, Isotopo))
parQ0 = 0
for (i in 1 : N) {
parQ0[i] = 'Q0'
}
park0 = 0
for (i in 1 : N) {
park0[i] = 'k0'
}
param
c(park0, parQ0)
Afinal
source('C:/Users/rafae/OneDrive/Workspace/Rstudio/AKFIT - R Edition.r', echo=TRUE)
paramfinal
aalfa
param3 = matrix('a', 'alfa')
param3 = c('a', 'alfa')
param3
param4 = cbind(param3, aalfa)
param4
source('C:/Users/rafae/OneDrive/Workspace/Rstudio/AKFIT - R Edition.r', echo=TRUE)
param4
Afinal
Afinal2
aalfa = matrix(Afinal[c(1, 2)])
param4 = cbind(param3, aalfa)
param4
param4 = cbind(param3, aalfa, '-')
param4
paramfinal = rbind(param4, param2)
paramfinal
View(paramfinal)
param4 = cbind(param3, aalfa)
paramfinal = rbind(param4, param2)
param4 = cbind(param3, aalfa, '-')
paramfinal = rbind(param4, param2)
param4 = cbind(param3, aalfa, '-')
paramfinal = rbind(param4, param2)
View(paramfinal)
aalfa = round(matrix(Afinal[c(1, 2)]), digits = 4)
aalfa
param2 = cbind(param, c(park0, parQ0), Afinal2)
param3 = c('a', 'alfa')
param4 = cbind(param3, aalfa, '-')
paramfinal = rbind(param4, param2)
View(paramfinal)
aalfa = round(matrix(Afinal[c(1, 2)]), digits = 5)
param = matrix(c(Isotopo, Isotopo))
parQ0 = 0
for (i in 1 : N) {
parQ0[i] = 'Q0'
}
park0 = 0
for (i in 1 : N) {
park0[i] = 'k0'
}
param2 = cbind(param, c(park0, parQ0), Afinal2)
param3 = c('a', 'alfa')
param4 = cbind(param3, aalfa, '-')
paramfinal = rbind(param4, param2)
View(paramfinal)
Afinal2 = round(matrix(c(Afinal[c(-1,-2)], exp(A3[c(-1,-2)]))), digits = 5)
aalfa = round(matrix(Afinal[c(1, 2)]), digits = 5)
param = matrix(c(Isotopo, Isotopo))
parQ0 = 0
for (i in 1 : N) {
parQ0[i] = 'Q0'
}
park0 = 0
for (i in 1 : N) {
park0[i] = 'k0'
}
param2 = cbind(param, c(park0, parQ0), Afinal2)
param3 = c('a', 'alfa')
param4 = cbind(param3, aalfa, '-')
paramfinal = rbind(param4, param2)
View(paramfinal)
Afinal2 = round(matrix(c(Afinal[c(-1,-2)], exp(A3[c(-1,-2)]))), digits = 10)
aalfa = round(matrix(Afinal[c(1, 2)]), digits = 5)
param = matrix(c(Isotopo, Isotopo))
parQ0 = 0
for (i in 1 : N) {
parQ0[i] = 'Q0'
}
park0 = 0
for (i in 1 : N) {
park0[i] = 'k0'
}
param2 = cbind(param, c(park0, parQ0), Afinal2)
param3 = c('a', 'alfa')
param4 = cbind(param3, aalfa, '-')
paramfinal = rbind(param4, param2)
paramfinal
View(paramfinal)
Afinal2 = round(matrix(c(Afinal[c(-1,-2)], exp(A3[c(-1,-2)]))), digits = 9)
aalfa = round(matrix(Afinal[c(1, 2)]), digits = 5)
param = matrix(c(Isotopo, Isotopo))
parQ0 = 0
for (i in 1 : N) {
parQ0[i] = 'Q0'
}
park0 = 0
for (i in 1 : N) {
park0[i] = 'k0'
}
param2 = cbind(param, c(park0, parQ0), Afinal2)
param3 = c('a', 'alfa')
param4 = cbind(param3, aalfa, '-')
paramfinal = rbind(param4, param2)
View(paramfinal)
options(scipen = 1)
Afinal2 = round(matrix(c(Afinal[c(-1,-2)], exp(A3[c(-1,-2)]))), digits = 9)
aalfa = round(matrix(Afinal[c(1, 2)]), digits = 5)
param = matrix(c(Isotopo, Isotopo))
parQ0 = 0
for (i in 1 : N) {
parQ0[i] = 'Q0'
}
park0 = 0
for (i in 1 : N) {
park0[i] = 'k0'
}
param2 = cbind(param, c(park0, parQ0), Afinal2)
param3 = c('a', 'alfa')
param4 = cbind(param3, aalfa, '-')
paramfinal = rbind(param4, param2)
View(paramfinal)
options(scipen = 0)
Afinal2 = round(matrix(c(Afinal[c(-1,-2)], exp(A3[c(-1,-2)]))), digits = 9)
aalfa = round(matrix(Afinal[c(1, 2)]), digits = 5)
param = matrix(c(Isotopo, Isotopo))
parQ0 = 0
for (i in 1 : N) {
parQ0[i] = 'Q0'
}
park0 = 0
for (i in 1 : N) {
park0[i] = 'k0'
}
param2 = cbind(param, c(park0, parQ0), Afinal2)
param3 = c('a', 'alfa')
param4 = cbind(param3, aalfa, '-')
paramfinal = rbind(param4, param2)
View(paramfinal)
options(scipen = 2)
Afinal2 = round(matrix(c(Afinal[c(-1,-2)], exp(A3[c(-1,-2)]))), digits = 9)
aalfa = round(matrix(Afinal[c(1, 2)]), digits = 5)
param = matrix(c(Isotopo, Isotopo))
parQ0 = 0
for (i in 1 : N) {
parQ0[i] = 'Q0'
}
park0 = 0
for (i in 1 : N) {
park0[i] = 'k0'
}
param2 = cbind(param, c(park0, parQ0), Afinal2)
param3 = c('a', 'alfa')
param4 = cbind(param3, aalfa, '-')
paramfinal = rbind(param4, param2)
paramfinal
options(scipen = 3)
Afinal2 = round(matrix(c(Afinal[c(-1,-2)], exp(A3[c(-1,-2)]))), digits = 9)
aalfa = round(matrix(Afinal[c(1, 2)]), digits = 5)
param = matrix(c(Isotopo, Isotopo))
parQ0 = 0
for (i in 1 : N) {
parQ0[i] = 'Q0'
}
park0 = 0
for (i in 1 : N) {
park0[i] = 'k0'
}
param2 = cbind(param, c(park0, parQ0), Afinal2)
param3 = c('a', 'alfa')
param4 = cbind(param3, aalfa, '-')
paramfinal = rbind(param4, param2)
View(paramfinal)
options(scipen = 100)
Afinal2 = round(matrix(c(Afinal[c(-1,-2)], exp(A3[c(-1,-2)]))), digits = 9)
aalfa = round(matrix(Afinal[c(1, 2)]), digits = 5)
param = matrix(c(Isotopo, Isotopo))
parQ0 = 0
for (i in 1 : N) {
parQ0[i] = 'Q0'
}
park0 = 0
for (i in 1 : N) {
park0[i] = 'k0'
}
param2 = cbind(param, c(park0, parQ0), Afinal2)
param3 = c('a', 'alfa')
param4 = cbind(param3, aalfa, '-')
paramfinal = rbind(param4, param2)
paramfinal
options(scipen = 1)
Afinal2 = round(matrix(c(Afinal[c(-1,-2)], exp(A3[c(-1,-2)]))), digits = 9)
aalfa = round(matrix(Afinal[c(1, 2)]), digits = 5)
param = matrix(c(Isotopo, Isotopo))
parQ0 = 0
for (i in 1 : N) {
parQ0[i] = 'Q0'
}
park0 = 0
for (i in 1 : N) {
park0[i] = 'k0'
}
param2 = cbind(param, c(park0, parQ0), Afinal2)
param3 = c('a', 'alfa')
param4 = cbind(param3, aalfa, '-')
paramfinal = rbind(param4, param2)
library("scales", lib.loc="D:/Programas/R-3.5.1/library")
library(scales)
scientific(digits = 4)
scientific(paramfinal, digits = 4)
scientific(Afinal2, digits = 4)
scientific(Afinal2, digits = 5)
param2 = cbind(param, c(park0, parQ0), scientific(Afinal2, digits = 5))
param2
options(scipen = 1)
Afinal2 = round(matrix(c(Afinal[c(-1,-2)], exp(A3[c(-1,-2)]))), digits = 9)
aalfa = round(matrix(Afinal[c(1, 2)]), digits = 5)
param = matrix(c(Isotopo, Isotopo))
parQ0 = 0
for (i in 1 : N) {
parQ0[i] = 'Q0'
}
park0 = 0
for (i in 1 : N) {
park0[i] = 'k0'
}
param2 = cbind(param, c(park0, parQ0), scientific(Afinal2, digits = 5))
param3 = c('a', 'alfa')
param4 = cbind(param3, aalfa, '-')
paramfinal = rbind(param4, param2)
paramfinal
param2 = cbind(param, c(park0, parQ0), scientific(Afinal2, digits = 5), rbind(k0,Q0))
rbind(k0,Q0)
k0
Q0
c(k0,Q0)
param2 = cbind(param, c(park0, parQ0), scientific(Afinal2, digits = 5), c(k0,Q0))
paramfinal = rbind(param4, param2)
param2 = cbind(param, c(park0, parQ0), scientific(Afinal2, digits = 5), c(k0,Q0))
param3 = c('a', 'alfa')
param4 = cbind(param3, aalfa, '-', '-')
paramfinal = rbind(param4, param2)
paramfinal
param2 = cbind(param, c(park0, parQ0), scientific(Afinal2, digits = 5), scientific(c(k0,Q0), digits = 5))
param4 = cbind(param3, aalfa, '-', '-')
paramfinal = rbind(param4, param2)
paramfinal
paramfinal = rbind(param4, param2)
colnames(paramfinal, 'Alvos', 'Valores', 'Valores', 'Referencia')
paramfinal = rbind(param4, param2)
colnames(paramfinal, 'Alvos', c('Valores', 'Valores', 'Referencia'))
paramfinal
paramfinal = rbind(param4, param2)
colnames(paramfinal, c('Alvos','Valores', 'Valores', 'Referencia'))
paramfinal = rbind(param4, param2)
colnames(paramfinal) = c('Alvos','Valores', 'Valores', 'Referencia')
paramfinal
qq = Eres^-alfa * Gth
for(i in 1:N){
Q0ia[i] = (((FCdau[idouro[i]]*(Aspau[idouro[i]]/AspCdau[idouro[i]])-1)/(FCd[i]*(Asp[i]/AspCd[i])-1))*((Gth[i]*Gepiau[idouro[i]])/((Gthau[idouro[i]]*Gepi[i])))*((Q0au[idouro[i]] - 0.429)/(Eresau[idouro[i]]^-alfa2)+0.429/((2*alfa2+1)*(0.55^alfa2))))
}
Q0ia = 0
for(i in 1:N){
Q0ia[i] = (((FCdau[idouro[i]]*(Aspau[idouro[i]]/AspCdau[idouro[i]])-1)/(FCd[i]*(Asp[i]/AspCd[i])-1))*((Gth[i]*Gepiau[idouro[i]])/((Gthau[idouro[i]]*Gepi[i])))*((Q0au[idouro[i]] - 0.429)/(Eresau[idouro[i]]^-alfa2)+0.429/((2*alfa2+1)*(0.55^alfa2))))
}
qw = (FCd * (Asp/AspCd) - 1) * Q0ia * Gepi
log(qq/qw)
qq/qw
1/qw
1/(qq/qw)
paramfinal
abline(2)
abline(2, 0)
abline(-2, 0)
abline(2, 0, lty=3)
abline(-2, 0, lty=3)
#gerando graficos
vetorx=0
for (i in 1 : Ntotal) {
vetorx[i] = 0.95+i*1.005
}
xplot=0
for (i in 1:Ntotal) {
xplot[i] = i
}
pointname = c(Isotopo, Isotopo)
pointname2 = c(Egama, Egama)
plot(xplot, (DD/sY), main = 'RESIDUOS PONDERADOS PELO DESVIO PADRAO', ylab = 'Y-Yaju-sigmaY', xlab = 'elementos', ylim = c(-7, 7))
text(xplot, (DD/sY), labels = pointname, cex = 0.7, pos = 3)
text(xplot, (DD/sY), labels = pointname2, cex = 0.7, pos = 1)
abline(2, 0, lty=3)
abline(-2, 0, lty=3)
plot(xplot, (DD/sY), main = 'RESIDUOS PONDERADOS PELO DESVIO PADRAO - k0 e Q0', ylab = 'Y-Yaju-sigmaY', xlab = 'elementos', ylim = c(-7, 7))
#gerando graficos
vetorx=0
for (i in 1 : Ntotal) {
vetorx[i] = 0.95+i*1.005
}
xplot=0
for (i in 1:Ntotal) {
xplot[i] = i
}
pointname = c(Isotopo, Isotopo)
pointname2 = c(Egama, Egama)
plot(xplot, (DD/sY), main = 'RESIDUOS PONDERADOS PELO DESVIO PADRAO - k0 e Q0', ylab = 'Y-Yaju-sigmaY', xlab = 'elementos', ylim = c(-7, 7))
text(xplot, (DD/sY), labels = pointname, cex = 0.7, pos = 3)
text(xplot, (DD/sY), labels = pointname2, cex = 0.7, pos = 1)
abline(2, 0, lty=3)
abline(-2, 0, lty=3)
2000000000000/2000000
/12
1e+6/12
1e+6/12/2
1e+6/12/4
1e+6/12/10
1e+6/12/14
1e+6/12/15
12*15
5556*180
